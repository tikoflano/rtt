openapi: 3.0.3
info:
  title: Race Time Tracker API
  version: 0.1.0
  description: API for Race Time Tracker
paths:
  /api/pilots/:
    get:
      operationId: pilots_list
      tags:
      - pilots
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pilot'
          description: ''
    post:
      operationId: pilots_create
      tags:
      - pilots
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pilot'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Pilot'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Pilot'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pilot'
          description: ''
  /api/pilots/{id}/:
    get:
      operationId: pilots_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this pilot.
        required: true
      tags:
      - pilots
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pilot'
          description: ''
    put:
      operationId: pilots_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this pilot.
        required: true
      tags:
      - pilots
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pilot'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Pilot'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Pilot'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pilot'
          description: ''
    patch:
      operationId: pilots_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this pilot.
        required: true
      tags:
      - pilots
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPilot'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPilot'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPilot'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pilot'
          description: ''
    delete:
      operationId: pilots_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this pilot.
        required: true
      tags:
      - pilots
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/races/:
    get:
      operationId: races_list
      tags:
      - races
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Race'
          description: ''
    post:
      operationId: races_create
      tags:
      - races
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Race'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Race'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Race'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Race'
          description: ''
  /api/races/{id}/:
    get:
      operationId: races_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this race.
        required: true
      tags:
      - races
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Race'
          description: ''
    put:
      operationId: races_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this race.
        required: true
      tags:
      - races
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Race'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Race'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Race'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Race'
          description: ''
    patch:
      operationId: races_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this race.
        required: true
      tags:
      - races
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedRace'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedRace'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedRace'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Race'
          description: ''
    delete:
      operationId: races_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this race.
        required: true
      tags:
      - races
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/races/{race_id}/descents/:
    get:
      operationId: races_descents_list
      parameters:
      - in: path
        name: race_id
        schema:
          type: integer
        required: true
      tags:
      - races
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Descent'
          description: ''
    post:
      operationId: races_descents_create
      parameters:
      - in: path
        name: race_id
        schema:
          type: integer
        required: true
      tags:
      - races
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Descent'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Descent'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Descent'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Descent'
          description: ''
  /api/races/{race_id}/descents/{id}/:
    get:
      operationId: races_descents_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this descent.
        required: true
      - in: path
        name: race_id
        schema:
          type: integer
        required: true
      tags:
      - races
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Descent'
          description: ''
    put:
      operationId: races_descents_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this descent.
        required: true
      - in: path
        name: race_id
        schema:
          type: integer
        required: true
      tags:
      - races
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Descent'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Descent'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Descent'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Descent'
          description: ''
    patch:
      operationId: races_descents_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this descent.
        required: true
      - in: path
        name: race_id
        schema:
          type: integer
        required: true
      tags:
      - races
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDescent'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDescent'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDescent'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Descent'
          description: ''
    delete:
      operationId: races_descents_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this descent.
        required: true
      - in: path
        name: race_id
        schema:
          type: integer
        required: true
      tags:
      - races
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/races/{race_id}/pilots/:
    get:
      operationId: races_pilots_list
      parameters:
      - in: path
        name: race_id
        schema:
          type: integer
        required: true
      tags:
      - races
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RacePilot'
          description: ''
    post:
      operationId: races_pilots_create
      parameters:
      - in: path
        name: race_id
        schema:
          type: integer
        required: true
      tags:
      - races
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RacePilot'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RacePilot'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RacePilot'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RacePilot'
          description: ''
  /api/races/{race_id}/pilots/{id}/:
    get:
      operationId: races_pilots_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this race pilot.
        required: true
      - in: path
        name: race_id
        schema:
          type: integer
        required: true
      tags:
      - races
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RacePilot'
          description: ''
    put:
      operationId: races_pilots_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this race pilot.
        required: true
      - in: path
        name: race_id
        schema:
          type: integer
        required: true
      tags:
      - races
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RacePilot'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RacePilot'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RacePilot'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RacePilot'
          description: ''
    patch:
      operationId: races_pilots_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this race pilot.
        required: true
      - in: path
        name: race_id
        schema:
          type: integer
        required: true
      tags:
      - races
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedRacePilot'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedRacePilot'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedRacePilot'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RacePilot'
          description: ''
    delete:
      operationId: races_pilots_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this race pilot.
        required: true
      - in: path
        name: race_id
        schema:
          type: integer
        required: true
      tags:
      - races
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/users/:
    get:
      operationId: users_list
      tags:
      - users
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
    post:
      operationId: users_create
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/users/{id}/:
    get:
      operationId: users_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - users
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: users_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: users_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: users_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - users
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/users/me/:
    get:
      operationId: users_me_retrieve
      tags:
      - users
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/venues/:
    get:
      operationId: venues_list
      tags:
      - venues
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Venue'
          description: ''
    post:
      operationId: venues_create
      tags:
      - venues
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Venue'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Venue'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Venue'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Venue'
          description: ''
  /api/venues/{id}/:
    get:
      operationId: venues_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this venue.
        required: true
      tags:
      - venues
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Venue'
          description: ''
    put:
      operationId: venues_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this venue.
        required: true
      tags:
      - venues
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Venue'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Venue'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Venue'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Venue'
          description: ''
    patch:
      operationId: venues_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this venue.
        required: true
      tags:
      - venues
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedVenue'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedVenue'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedVenue'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Venue'
          description: ''
    delete:
      operationId: venues_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this venue.
        required: true
      tags:
      - venues
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
components:
  schemas:
    Descent:
      type: object
      description: |-
        A ModelSerializer that takes additional arguments for
        "fields", "omit" and "expand" in order to
        control which fields are displayed, and whether to replace simple
        values with complex, nested serializations
      properties:
        id:
          type: integer
          readOnly: true
        race_pilot:
          type: integer
        track:
          type: integer
        start:
          type: string
          format: date-time
        end:
          type: string
          format: date-time
        status:
          $ref: '#/components/schemas/StatusEnum'
        duration:
          type: integer
          readOnly: true
      required:
      - duration
      - id
      - race_pilot
      - track
    PatchedDescent:
      type: object
      description: |-
        A ModelSerializer that takes additional arguments for
        "fields", "omit" and "expand" in order to
        control which fields are displayed, and whether to replace simple
        values with complex, nested serializations
      properties:
        id:
          type: integer
          readOnly: true
        race_pilot:
          type: integer
        track:
          type: integer
        start:
          type: string
          format: date-time
        end:
          type: string
          format: date-time
        status:
          $ref: '#/components/schemas/StatusEnum'
        duration:
          type: integer
          readOnly: true
    PatchedPilot:
      type: object
      description: |-
        A ModelSerializer that takes additional arguments for
        "fields", "omit" and "expand" in order to
        control which fields are displayed, and whether to replace simple
        values with complex, nested serializations
      properties:
        id:
          type: integer
          readOnly: true
        first_name:
          type: string
          maxLength: 30
        last_name:
          type: string
          maxLength: 30
    PatchedRace:
      type: object
      description: |-
        A ModelSerializer that takes additional arguments for
        "fields", "omit" and "expand" in order to
        control which fields are displayed, and whether to replace simple
        values with complex, nested serializations
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        date:
          type: string
          format: date
        venue:
          type: integer
    PatchedRacePilot:
      type: object
      description: |-
        A ModelSerializer that takes additional arguments for
        "fields", "omit" and "expand" in order to
        control which fields are displayed, and whether to replace simple
        values with complex, nested serializations
      properties:
        id:
          type: integer
        first_name:
          type: string
        last_name:
          type: string
        descents:
          type: array
          items:
            type: integer
        number:
          type: integer
          maximum: 2147483647
          minimum: 1
    PatchedUser:
      type: object
      description: |-
        A ModelSerializer that takes additional arguments for
        "fields", "omit" and "expand" in order to
        control which fields are displayed, and whether to replace simple
        values with complex, nested serializations
      properties:
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
    PatchedVenue:
      type: object
      description: |-
        A ModelSerializer that takes additional arguments for
        "fields", "omit" and "expand" in order to
        control which fields are displayed, and whether to replace simple
        values with complex, nested serializations
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        tracks:
          type: array
          items:
            $ref: '#/components/schemas/Track'
          readOnly: true
    Pilot:
      type: object
      description: |-
        A ModelSerializer that takes additional arguments for
        "fields", "omit" and "expand" in order to
        control which fields are displayed, and whether to replace simple
        values with complex, nested serializations
      properties:
        id:
          type: integer
          readOnly: true
        first_name:
          type: string
          maxLength: 30
        last_name:
          type: string
          maxLength: 30
      required:
      - first_name
      - id
      - last_name
    Race:
      type: object
      description: |-
        A ModelSerializer that takes additional arguments for
        "fields", "omit" and "expand" in order to
        control which fields are displayed, and whether to replace simple
        values with complex, nested serializations
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        date:
          type: string
          format: date
        venue:
          type: integer
      required:
      - date
      - id
      - name
      - venue
    RacePilot:
      type: object
      description: |-
        A ModelSerializer that takes additional arguments for
        "fields", "omit" and "expand" in order to
        control which fields are displayed, and whether to replace simple
        values with complex, nested serializations
      properties:
        id:
          type: integer
        first_name:
          type: string
        last_name:
          type: string
        descents:
          type: array
          items:
            type: integer
        number:
          type: integer
          maximum: 2147483647
          minimum: 1
      required:
      - descents
      - first_name
      - id
      - last_name
      - number
    StatusEnum:
      enum:
      - pending
      - running
      - paused
      - finished
      - dns
      - dnf
      type: string
    Track:
      type: object
      description: |-
        A ModelSerializer that takes additional arguments for
        "fields", "omit" and "expand" in order to
        control which fields are displayed, and whether to replace simple
        values with complex, nested serializations
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
      required:
      - id
      - name
    User:
      type: object
      description: |-
        A ModelSerializer that takes additional arguments for
        "fields", "omit" and "expand" in order to
        control which fields are displayed, and whether to replace simple
        values with complex, nested serializations
      properties:
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
    Venue:
      type: object
      description: |-
        A ModelSerializer that takes additional arguments for
        "fields", "omit" and "expand" in order to
        control which fields are displayed, and whether to replace simple
        values with complex, nested serializations
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        tracks:
          type: array
          items:
            $ref: '#/components/schemas/Track'
          readOnly: true
      required:
      - id
      - name
      - tracks
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
